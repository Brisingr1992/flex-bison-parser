Grammar

    0 $accept: program $end

    1 program: MAIN '(' ')' '{' '}'
    2        | MAIN '(' ')' '{' vardefs stmts '}'
    3        | MAIN '(' ')' '{' stmts '}'
    4        | ERROR

    5 vardefs: vardefs vardef SEMICOLON
    6        | vardef SEMICOLON

    7 vardef: INT_NUM IDENTIFIER
    8       | FLOAT_NUM IDENTIFIER

    9 stmts: stmts stmt SEMICOLON
   10      | stmt SEMICOLON

   11 stmt: /* empty */
   12     | stmt expr_stmt

   13 expr_stmt: expr
   14          | IDENTIFIER EQUAL expr
   15          | PRINTID IDENTIFIER
   16          | PRINTEXP expr

   17 expr: expr SUB expr
   18     | expr ADD expr
   19     | expr MUL expr
   20     | expr DIV expr
   21     | INT
   22     | FLOAT
   23     | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 2 3
')' (41) 1 2 3
'{' (123) 1 2 3
'}' (125) 1 2 3
error (256)
SEMICOLON (258) 5 6 9 10
SUB (259) 17
MUL (260) 19
EQUAL (261) 14
DIV (262) 20
ADD (263) 18
INT_NUM (264) 7
FLOAT_NUM (265) 8
ERROR (266) 4
MAIN (267) 1 2 3
PRINTID (268) 15
PRINTEXP (269) 16
INT (270) 21
FLOAT (271) 22
IDENTIFIER (272) 7 8 14 15 23


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
program (23)
    on left: 1 2 3 4, on right: 0
vardefs (24)
    on left: 5 6, on right: 2 5
vardef (25)
    on left: 7 8, on right: 5 6
stmts (26)
    on left: 9 10, on right: 2 3 9
stmt (27)
    on left: 11 12, on right: 9 10 12
expr_stmt (28)
    on left: 13 14 15 16, on right: 12
expr (29)
    on left: 17 18 19 20 21 22 23, on right: 13 14 16 17 18 19 20


state 0

    0 $accept: . program $end

    ERROR  shift, and go to state 1
    MAIN   shift, and go to state 2

    program  go to state 3


state 1

    4 program: ERROR .

    $default  reduce using rule 4 (program)


state 2

    1 program: MAIN . '(' ')' '{' '}'
    2        | MAIN . '(' ')' '{' vardefs stmts '}'
    3        | MAIN . '(' ')' '{' stmts '}'

    '('  shift, and go to state 4


state 3

    0 $accept: program . $end

    $end  shift, and go to state 5


state 4

    1 program: MAIN '(' . ')' '{' '}'
    2        | MAIN '(' . ')' '{' vardefs stmts '}'
    3        | MAIN '(' . ')' '{' stmts '}'

    ')'  shift, and go to state 6


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: MAIN '(' ')' . '{' '}'
    2        | MAIN '(' ')' . '{' vardefs stmts '}'
    3        | MAIN '(' ')' . '{' stmts '}'

    '{'  shift, and go to state 7


state 7

    1 program: MAIN '(' ')' '{' . '}'
    2        | MAIN '(' ')' '{' . vardefs stmts '}'
    3        | MAIN '(' ')' '{' . stmts '}'

    INT_NUM    shift, and go to state 8
    FLOAT_NUM  shift, and go to state 9
    '}'        shift, and go to state 10

    $default  reduce using rule 11 (stmt)

    vardefs  go to state 11
    vardef   go to state 12
    stmts    go to state 13
    stmt     go to state 14


state 8

    7 vardef: INT_NUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 15


state 9

    8 vardef: FLOAT_NUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 16


state 10

    1 program: MAIN '(' ')' '{' '}' .

    $default  reduce using rule 1 (program)


state 11

    2 program: MAIN '(' ')' '{' vardefs . stmts '}'
    5 vardefs: vardefs . vardef SEMICOLON

    INT_NUM    shift, and go to state 8
    FLOAT_NUM  shift, and go to state 9

    $default  reduce using rule 11 (stmt)

    vardef  go to state 17
    stmts   go to state 18
    stmt    go to state 14


state 12

    6 vardefs: vardef . SEMICOLON

    SEMICOLON  shift, and go to state 19


state 13

    3 program: MAIN '(' ')' '{' stmts . '}'
    9 stmts: stmts . stmt SEMICOLON

    '}'  shift, and go to state 20

    $default  reduce using rule 11 (stmt)

    stmt  go to state 21


state 14

   10 stmts: stmt . SEMICOLON
   12 stmt: stmt . expr_stmt

    SEMICOLON   shift, and go to state 22
    PRINTID     shift, and go to state 23
    PRINTEXP    shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    expr_stmt  go to state 28
    expr       go to state 29


state 15

    7 vardef: INT_NUM IDENTIFIER .

    $default  reduce using rule 7 (vardef)


state 16

    8 vardef: FLOAT_NUM IDENTIFIER .

    $default  reduce using rule 8 (vardef)


state 17

    5 vardefs: vardefs vardef . SEMICOLON

    SEMICOLON  shift, and go to state 30


state 18

    2 program: MAIN '(' ')' '{' vardefs stmts . '}'
    9 stmts: stmts . stmt SEMICOLON

    '}'  shift, and go to state 31

    $default  reduce using rule 11 (stmt)

    stmt  go to state 21


state 19

    6 vardefs: vardef SEMICOLON .

    $default  reduce using rule 6 (vardefs)


state 20

    3 program: MAIN '(' ')' '{' stmts '}' .

    $default  reduce using rule 3 (program)


state 21

    9 stmts: stmts stmt . SEMICOLON
   12 stmt: stmt . expr_stmt

    SEMICOLON   shift, and go to state 32
    PRINTID     shift, and go to state 23
    PRINTEXP    shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    expr_stmt  go to state 28
    expr       go to state 29


state 22

   10 stmts: stmt SEMICOLON .

    $default  reduce using rule 10 (stmts)


state 23

   15 expr_stmt: PRINTID . IDENTIFIER

    IDENTIFIER  shift, and go to state 33


state 24

   16 expr_stmt: PRINTEXP . expr

    INT         shift, and go to state 25
    FLOAT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 34

    expr  go to state 35


state 25

   21 expr: INT .

    $default  reduce using rule 21 (expr)


state 26

   22 expr: FLOAT .

    $default  reduce using rule 22 (expr)


state 27

   14 expr_stmt: IDENTIFIER . EQUAL expr
   23 expr: IDENTIFIER .

    EQUAL  shift, and go to state 36

    $default  reduce using rule 23 (expr)


state 28

   12 stmt: stmt expr_stmt .

    $default  reduce using rule 12 (stmt)


state 29

   13 expr_stmt: expr .
   17 expr: expr . SUB expr
   18     | expr . ADD expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    SUB  shift, and go to state 37
    MUL  shift, and go to state 38
    DIV  shift, and go to state 39
    ADD  shift, and go to state 40

    $default  reduce using rule 13 (expr_stmt)


state 30

    5 vardefs: vardefs vardef SEMICOLON .

    $default  reduce using rule 5 (vardefs)


state 31

    2 program: MAIN '(' ')' '{' vardefs stmts '}' .

    $default  reduce using rule 2 (program)


state 32

    9 stmts: stmts stmt SEMICOLON .

    $default  reduce using rule 9 (stmts)


state 33

   15 expr_stmt: PRINTID IDENTIFIER .

    $default  reduce using rule 15 (expr_stmt)


state 34

   23 expr: IDENTIFIER .

    $default  reduce using rule 23 (expr)


state 35

   16 expr_stmt: PRINTEXP expr .
   17 expr: expr . SUB expr
   18     | expr . ADD expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    SUB  shift, and go to state 37
    MUL  shift, and go to state 38
    DIV  shift, and go to state 39
    ADD  shift, and go to state 40

    $default  reduce using rule 16 (expr_stmt)


state 36

   14 expr_stmt: IDENTIFIER EQUAL . expr

    INT         shift, and go to state 25
    FLOAT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 34

    expr  go to state 41


state 37

   17 expr: expr SUB . expr

    INT         shift, and go to state 25
    FLOAT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 34

    expr  go to state 42


state 38

   19 expr: expr MUL . expr

    INT         shift, and go to state 25
    FLOAT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 34

    expr  go to state 43


state 39

   20 expr: expr DIV . expr

    INT         shift, and go to state 25
    FLOAT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 34

    expr  go to state 44


state 40

   18 expr: expr ADD . expr

    INT         shift, and go to state 25
    FLOAT       shift, and go to state 26
    IDENTIFIER  shift, and go to state 34

    expr  go to state 45


state 41

   14 expr_stmt: IDENTIFIER EQUAL expr .
   17 expr: expr . SUB expr
   18     | expr . ADD expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    SUB  shift, and go to state 37
    MUL  shift, and go to state 38
    DIV  shift, and go to state 39
    ADD  shift, and go to state 40

    $default  reduce using rule 14 (expr_stmt)


state 42

   17 expr: expr . SUB expr
   17     | expr SUB expr .
   18     | expr . ADD expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    MUL  shift, and go to state 38
    DIV  shift, and go to state 39

    $default  reduce using rule 17 (expr)


state 43

   17 expr: expr . SUB expr
   18     | expr . ADD expr
   19     | expr . MUL expr
   19     | expr MUL expr .
   20     | expr . DIV expr

    $default  reduce using rule 19 (expr)


state 44

   17 expr: expr . SUB expr
   18     | expr . ADD expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   20     | expr DIV expr .

    $default  reduce using rule 20 (expr)


state 45

   17 expr: expr . SUB expr
   18     | expr . ADD expr
   18     | expr ADD expr .
   19     | expr . MUL expr
   20     | expr . DIV expr

    MUL  shift, and go to state 38
    DIV  shift, and go to state 39

    $default  reduce using rule 18 (expr)
